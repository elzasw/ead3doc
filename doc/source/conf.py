# Configuration file for the Sphinx documentation builder.
#
# This file only contains a selection of the most common options. For a full
# list see the documentation:
# https://www.sphinx-doc.org/en/master/usage/configuration.html

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
# import os
# import sys
from docutils import nodes
from docutils.parsers.rst import Directive
from docutils.statemachine import ViewList
# sys.path.insert(0, os.path.abspath('.'))
from sphinx.errors import ConfigError

# -- Project information -----------------------------------------------------

project = 'MV ČR EAD3 Profil'
copyright = '2020-2023, LightComp v.o.s.'
author = 'Petr Pytelka, LightComp v.o.s.'


# -- General configuration ---------------------------------------------------

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
#   'sphinxcontrib.openapi'
]

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = 'cs'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = []


# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = 'sphinx_rtd_theme'

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']


class TagsDirective(Directive):
    has_content = True

    def run(self):
        #content = ViewList()
        paragraph_node = nodes.paragraph()
        #print(type(paragraph_node))
        for line in self.content:
            paragraph_node += nodes.Text('Použití: ')  # Add space between bold parts
            count = 0
            if(line.strip()=="vzdy"):
                line = "aip-inherent, aip-kontext, popis, pomucka"
            for part in line.split(','):
                text = "";
                match part.strip():
                    case "aip-inherent": 
                        text = "AIP - inheretní popis";
                    case "aip-kontext": 
                        text = "AIP - kontextuální popis";
                    case "popis": 
                        text = "výměnný formát";
                    case "pomucka": 
                        text = "archivní pomůcka";
                    case _:
                        raise ValueError("Nerozpoznaná hodnota v tags: "+part);
                #bold_node = nodes.literal(text=part.strip())
                bold_node = nodes.inline(rawtext=text, classes=["guilabel"])
                bold_node += nodes.Text(text)
                if(count>0):
                    paragraph_node += nodes.Text(', ')  # Add space between parts
                paragraph_node += bold_node
                count+=1                
        return [paragraph_node]

def setup(app):
    app.add_directive("tags", TagsDirective)
